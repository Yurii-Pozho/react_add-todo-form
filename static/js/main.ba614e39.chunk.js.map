{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","name","email","className","href","TodoInfo","todo","title","completed","id","classNames","TodoList","todos","map","username","getUserById","userId","usersFromServer","find","App","useState","setUserId","isUserIdValid","setIsUserIdValid","setTitle","isTitleValid","setIsTitleValid","action","method","onSubmit","event","preventDefault","getTodoId","maxId","Math","max","push","type","value","placeholder","onChange","currentValue","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ba614e39.chunk.js","sourcesContent":["import { User } from '../../types/User';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const { title, completed, user } = todo;\n\n  return (\n    <article\n      key={todo.id}\n      data-id={todo.id}\n      className={classNames('TodoInfo',\n        { 'TodoInfo--completed': completed })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo key={todo.id} todo={todo} />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","/* eslint-disable consistent-return */\nimport './App.scss';\nimport React, { useState } from 'react';\nimport { TodoList } from './components/TodoList';\n\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nfunction getUserById(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport const todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App = () => {\n  const [userId, setUserId] = useState(0);\n  const [isUserIdValid, setIsUserIdValid] = useState(false);\n  const [title, setTitle] = useState('');\n  const [isTitleValid, setIsTitleValid] = useState(false);\n\n  const resetForm = () => {\n    setUserId(0);\n    setTitle('');\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setIsUserIdValid(!userId);\n    setIsTitleValid(!title);\n\n    const getTodoId = todos.map(todo => todo.id);\n    const maxId = Math.max(...getTodoId) + 1;\n\n    if (userId && title) {\n      todos.push({\n        id: maxId,\n        title,\n        completed: false,\n        userId,\n        user: getUserById(userId),\n      });\n\n      resetForm();\n    }\n  };\n\n  const handleTitleInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const currentValue = event.target.value;\n\n    setTitle(currentValue);\n    setIsTitleValid(!currentValue);\n  };\n\n  const handleUserSelection = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const currentValue = +event.target.value;\n\n    setUserId(currentValue);\n    setIsUserIdValid(!currentValue);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label>\n            <span>Title: </span>\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              value={title}\n              placeholder=\"Enter a title\"\n              onChange={handleTitleInput}\n            />\n          </label>\n\n          {isTitleValid && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label>\n            <span>User: </span>\n            <select\n              data-cy=\"userSelect\"\n              value={userId}\n              onChange={handleUserSelection}\n            >\n              <option value=\"0\" disabled>Choose a user</option>\n              {\n                usersFromServer.map(user => (\n                  <option key={user.id} value={user.id}>\n                    {user.name}\n                  </option>\n                ))\n              }\n            </select>\n          </label>\n\n          {isUserIdValid && <span className=\"error\">Please choose a user</span>}\n        </div>\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}